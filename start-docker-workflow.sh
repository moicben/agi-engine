#!/bin/bash

# Script to start the complete Docker + Android + NordVPN + WhatsApp workflow
# This script orchestrates the entire automated environment

echo "üöÄ D√âMARRAGE ENVIRONNEMENT COMPLET DOCKER + ANDROID + WHATSAPP"
echo "================================================================"

# Configuration
WORKFLOW_COUNTRIES="${WORKFLOW_COUNTRIES:-ca,us,fr}"
MAX_CONCURRENT_WORKFLOWS="${MAX_CONCURRENT_WORKFLOWS:-2}"
WORKFLOW_DURATION="${WORKFLOW_DURATION:-300000}"
AUTO_RESTART="${AUTO_RESTART:-false}"

echo "üîß Configuration:"
echo "   ‚Ä¢ Pays: $WORKFLOW_COUNTRIES"
echo "   ‚Ä¢ Workflows concurrents: $MAX_CONCURRENT_WORKFLOWS"
echo "   ‚Ä¢ Dur√©e par workflow: $((WORKFLOW_DURATION / 1000)) secondes"
echo "   ‚Ä¢ Red√©marrage automatique: $AUTO_RESTART"
echo ""

# V√©rifier si Docker est en cours d'ex√©cution
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker n'est pas en cours d'ex√©cution"
    echo "üí° D√©marrez Docker Desktop ou le service Docker"
    exit 1
fi

# V√©rifier si le container kasm-desktop existe
if ! docker ps -a --filter name=kasm-desktop | grep -q kasm-desktop; then
    echo "üê≥ Container kasm-desktop non trouv√©"
    echo "üí° D√©marrez l'environnement avec: ./start-sync.sh"
    exit 1
fi

# V√©rifier si le container est en cours d'ex√©cution
if ! docker ps --filter name=kasm-desktop | grep -q kasm-desktop; then
    echo "üîÑ Container kasm-desktop trouv√© mais arr√™t√©"
    echo "üí° D√©marrage du container..."
    docker compose up -d

    # Attendre que le container d√©marre
    echo "‚è≥ Attente du d√©marrage du container..."
    sleep 15

    if ! docker ps --filter name=kasm-desktop | grep -q kasm-desktop; then
        echo "‚ùå √âchec du d√©marrage du container"
        echo "üí° V√©rifiez les logs: docker compose logs"
        exit 1
    fi
fi

echo "‚úÖ Container Docker pr√™t"
echo ""

# V√©rifier si les services sont disponibles
echo "üîç V√©rification des services..."

# V√©rifier Node.js
if ! docker exec kasm-desktop which node > /dev/null 2>&1; then
    echo "‚ö†Ô∏è Node.js non trouv√© dans le container"
    echo "üì¶ Installation de Node.js..."
    docker exec kasm-desktop bash -c "curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash - && sudo apt-get install -y nodejs"
fi

# V√©rifier les outils de d√©veloppement
docker exec kasm-desktop bash -c "
if ! which git > /dev/null 2>&1; then
    echo 'üì¶ Installation de git...'
    sudo apt update && sudo apt install -y git
fi
"

echo "‚úÖ Services v√©rifi√©s"
echo ""

# Cr√©er le r√©pertoire de logs
mkdir -p logs

# D√©marrer le workflow avec les variables d'environnement
echo "üéØ D√©marrage du workflow automatis√©..."
echo "   Appuyez sur Ctrl+C pour arr√™ter proprement"
echo ""

export WORKFLOW_COUNTRIES="$WORKFLOW_COUNTRIES"
export MAX_CONCURRENT_WORKFLOWS="$MAX_CONCURRENT_WORKFLOWS"
export WORKFLOW_DURATION="$WORKFLOW_DURATION"
export AUTO_RESTART="$AUTO_RESTART"

# D√©marrer le workflow
node tools/docker-integration/docker-android-workflow.js

# Code de sortie
exit_code=$?

if [ $exit_code -eq 0 ]; then
    echo "‚úÖ Workflow termin√© avec succ√®s"
else
    echo "‚ùå Workflow termin√© avec erreur (code: $exit_code)"
fi

echo ""
echo "üìä Logs disponibles dans le r√©pertoire ./logs/"
echo "üìã Rapport final g√©n√©r√© automatiquement"

exit $exit_code
