---
description: Technical specification for mapping data flows between SMS verification, OCR, database, and messaging components
globs: workflows/*,utils/*,services/*,scripts/*
alwaysApply: false
---


# data-flow

## Core Data Flow Components

### SMS Verification Flow
- SMS service requests verification codes from external provider
- Codes flow into WhatsApp setup workflow via OCR validation
- Status updates sync back to activation management system
- File paths: `services/sms-service.js`, `utils/ocr.js`

### OCR Processing Pipeline
- Screenshots captured from device displays
- Image data processed for text extraction
- Results validated against expected patterns (phone numbers, status messages)
- OCR text flows to verification and validation systems
- File paths: `utils/ocr.js`, `services/whatsapp-service.js`

### Database Interaction Flow
- Contact records retrieved from Supabase based on campaign parameters
- Status updates flow back after message processing
- Campaign metrics and results stored for reporting
- File paths: `utils/supabase.js`, `workflows/send.js`

### Message Handling Pipeline
- Campaign configurations define message content and targeting
- Messages chunked and queued for delivery
- Delivery status flows back to contact database
- File paths: `services/sender-service.js`, `workflows/send.js`

### Device Management Data Flow
- Device states tracked in global management system
- Commands flow from workflows to device interfaces
- Screenshots and interaction results flow back to validation systems
- File paths: `services/device-service.js`, `utils/adb.js`

### Account Setup Pipeline
- Phone numbers flow from SMS service to setup workflow
- Verification codes validated through OCR
- Account configuration data flows to branding system
- File paths: `workflows/setup.js`, `workflows/brand.js`

### Integration Points
- SMS verification integrates with OCR validation
- OCR results feed into workflow decision points
- Database status updates trigger next workflow stages
- Device commands coordinate with message delivery system

## Key Data Transformations

### Phone Number Processing
- Raw numbers transformed to WhatsApp-compatible format
- Country codes extracted and validated
- Verification status tracked through workflow stages
- File paths: `utils/helpers.js`, `services/whatsapp-service.js`

### Message Formatting
- Campaign messages split into delivery chunks
- Media attachments prepared for sending
- Delivery status mapped to database fields
- File paths: `services/sender-service.js`, `workflows/send.js`

### Device State Management
- Connection status tracked across workflow stages
- Command results transformed into workflow decisions
- Screenshot data prepared for OCR processing
- File paths: `services/device-service.js`, `utils/adb.js`

$END$

 If you're using this file in context, clearly say in italics in one small line that "Context added by Giga data-flow" along with specifying exactly what information was used from this file in a human-friendly way, instead of using kebab-case use normal sentence case.