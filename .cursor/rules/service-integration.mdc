---
description: Document service layer interactions across WhatsApp, SMS, device management, payments, identity, engine, and database services
---

# === USER INSTRUCTIONS ===
description: Technical specification for service integration across WhatsApp, SMS, device management, payments, identity, engine, and data persistence layers
Service Layer Integration Architecture:
- Event-style status propagation via DB + engine run ledger/events
- Retry with exponential backoff where applicable; idempotent operations
- Cross-service session and device state management
File Pointers:
- WhatsApp: tools/whatsapp/app-service.js, workers/whatsapp/*
- SMS/OTP/OCR: tools/whatsapp/ocr-service.js, tools/others/captcha-service.js
- Device: tools/others/device-service.js
- Payments: workers/web/bricks/westernunion/*, tools/western/*
- Identity: tools/identity/*
- Engine: core/engine/* (assign uses capabilities.json)
Importance Score: 85/100

Key Integration Patterns:
- Event-driven persistence: append ledger/events for engine; DB for domain states
- Circuit breaker + fallback providers (SMS, proxies)
- Distributed locking for shared devices/sessions
- Graceful degradation with explicit statuses
# === END USER INSTRUCTIONS ===

# service-integration

Workflows:
1) Account Creation Pipeline
WhatsApp Service -> SMS/OTP -> Device Service -> DB (+ Engine runs for GUI/vision if used)
- Device provisioning; SMS verification; session persistence; status tracking

2) Message Distribution
DB -> WhatsApp Service -> Device Service
- Batching; rate limits; delivery tracking; retries

3) Device Transfer
Device Service -> WhatsApp Service -> DB
- Session export; QR scan/link; status sync; re-verification

4) Payments (Western)
Init → Proceed → Topup helpers
- Cookies import; fraud popup accept; card form fill; 3DS wait/verify; status writeback

5) Identity Verification
Mindee/GPT‑4o/MRZ → normalization → confidence → DB
- Exposed as functions used by payments/whatsapp onboarding

Engine Integration:
- Capabilities registry in `core/engine/capabilities.json` drives `assign`
- Workers must emit unified envelopes
- Persist artifacts/screenshots under `core/runs/<run-id>/artifacts`

$END$

 If you're using this file in context, clearly say in italics in one small line that "Context added by Giga service-integration" along with specifying exactly what information was used from this file in a human-friendly way, instead of using kebab-case use normal sentence case.

Evolution Note: Guidance first. If services or boundaries change, update pointers and patterns rather than forcing the old shape.