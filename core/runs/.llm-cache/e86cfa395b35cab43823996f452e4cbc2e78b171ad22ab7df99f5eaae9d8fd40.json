{
  "content": "{\n  \"stage\": \"Plan\",\n  \"iteration\": \"1\",\n  \"tasks\": [\n    {\n      \"id\": \"T1\",\n      \"name\": \"Create QA test suite\",\n      \"objective\": \"Produce a deterministic, machine-readable set of 50 QA test cases covering normal, edge, ambiguous, and adversarial inputs with expected answers and tags.\",\n      \"inputs\": {\n        \"system_spec\": \"brief description of the QA system capabilities and target domains (provided by user or default to general knowledge)\",\n        \"coverage_requirements\": \"must include: factual recall, reasoning, multi-step, math, code, ambiguous queries, out-of-scope, and adversarial phrasing\"\n      },\n      \"outputs\": {\n        \"test_suite_json\": {\n          \"format\": \"array of objects\",\n          \"fields\": [\"id\", \"prompt\", \"expected_answer\", \"acceptance_criteria\", \"difficulty\", \"tags\"]\n        },\n        \"metadata\": {\n          \"total_tests\": 50,\n          \"category_counts\": {}\n        }\n      },\n      \"actions\": [\n        \"Enumerate test categories: factual_recall, reasoning, multi_step, math, code, ambiguous, out_of_scope, adversarial.\",\n        \"For each category, define deterministic generation rules and required number of cases to total 50 (e.g., 10 factual, 8 reasoning, 8 multi_step, 6 math, 6 code, 4 ambiguous, 4 out_of_scope).\",\n        \"Manually craft (not randomly generate) each prompt and a concise expected_answer with an explicit acceptance_criteria string (exact match or semantic match rules).\",\n        \"Assign difficulty and tags for each case.\",\n        \"Serialize the collection into test_suite_json with stable ordering (sorted by id).\",\n        \"Produce metadata.category_counts.\"\n      ],\n      \"dependencies\": [],\n      \"acceptance\": [\n        \"test_suite_json contains exactly 50 test objects.\",\n        \"Each object includes id, prompt, expected_answer, acceptance_criteria, difficulty, tags.\",\n        \"Categories cover all required types and category_counts match the planned distribution.\",\n        \"IDs are unique and deterministic (e.g., T1-01 .. T1-50).\"\n      ],\n      \"risks\": [\n        \"Insufficient coverage of real-world failure modes.\",\n        \"Unclear or subjective expected_answer/acceptance_criteria causing ambiguous scoring.\"\n      ],\n      \"mitigations\": [\n        \"Include explicit acceptance_criteria for each test (exact match vs. semantic match with examples).\",\n        \"Ensure diverse categories and human review step in subsequent iteration if gaps are found.\"\n      ]\n    },\n    {\n      \"id\": \"T2\",\n      \""
}